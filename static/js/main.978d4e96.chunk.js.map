{"version":3,"sources":["Components/Header.js","Components/todoComp.js","data/data.js","App.js","index.js"],"names":["Header","className","TodoComp","props","onChange","handleChange","task","id","type","checked","completed","style","fontStyle","color","textDecoration","text","onClick","delete","todosData","App","deleteHandler","index","state","todos","splice","setState","data","bind","addTask","this","prevState","map","todo","event","preventDefault","textInput","value","alert","unshift","Math","floor","random","console","log","renderTask","key","onSubmit","ref","input","Component","ReactDOM","render","document","getElementById"],"mappings":"gQAUeA,MARf,WACI,OACI,4BAAQC,UAAU,UAClB,wCACA,uBAAGA,UAAU,eAAb,2BCYOC,MAhBf,SAAkBC,GAMd,OACI,0BAAMF,UAAU,aACZ,2BAAOG,SAAU,kBAAMD,EAAME,aAAaF,EAAMG,KAAKC,KAAKC,KAAK,WAAWC,QAASN,EAAMG,KAAKI,YAC9F,2BAAOC,MAAOR,EAAMG,KAAKI,UARV,CACnBE,UAAW,SACXC,MAAO,UACPC,eAAgB,gBAK0C,MAAOX,EAAMG,KAAKS,MACxE,4BAAQC,QAASb,EAAMc,OAAQhB,UAAU,UAAS,uBAAGA,UAAU,oBCU5DiB,EAtBG,CAAC,CACfX,GAAI,EACJQ,KAAM,qBACNL,WAAW,GAEf,CACIH,GAAI,EACJQ,KAAM,mBACNL,WAAW,GAEf,CACIH,GAAI,EACJQ,KAAM,mBACNL,WAAW,GAEf,CACIH,GAAI,EACJQ,KAAM,WACNL,WAAW,I,kOCwEAS,E,YAnFX,aAAe,IAAD,8BACV,+CAgDJC,cAAgB,SAACC,GACb,IAAMf,EAAI,YAAO,EAAKgB,MAAMC,OAC5BjB,EAAKkB,OAAOH,EAAO,GACnB,EAAKI,SAAS,CAAEF,MAAOjB,KAlDvB,EAAKgB,MAAQ,CACTC,MAAM,YAAKG,IAEf,EAAKrB,aAAe,EACfA,aACAsB,KAFe,gBAGpB,EAAKC,QAAU,EACVA,QACAD,KAFU,gBARL,E,0EAaDpB,GACTsB,KAAKJ,UAAS,SAAAK,GAWV,MAAO,CAAEP,MAVUO,EAAUP,MAAMQ,KAAI,SAAAC,GACnC,OAAIA,EAAKzB,KAAOA,E,yVACL,CAAP,GACOyB,EADP,CAEItB,WAAYsB,EAAKtB,YAGlBsB,W,8BAOXC,GACJA,EAAMC,iBAEN,IAAMX,EAAK,YAAOM,KAAKP,MAAMC,OACA,KAAzBM,KAAKM,UAAUC,MACfC,MAAM,yBAENd,EAAMe,QAAQ,CACV/B,GAAIgC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpB1B,KAAMc,KAAKM,UAAUC,MACrB1B,WAAW,IAEfmB,KAAKJ,SAAS,CACVF,MAAOA,IAEXM,KAAKM,UAAUC,MAAQ,M,0CAW3BM,QAAQC,IAAId,KAAKP,S,+BAGX,IAAD,OACCsB,EAAaf,KACdP,MACAC,MACAQ,KAAI,SAACzB,EAAMe,GACR,OAAQ,kBAAC,EAAD,CAAMhB,aAAc,EAAKA,aAAcY,OAAQ,kBAAM,EAAKG,cAAcC,IAAQf,KAAMA,EAAMuC,IAAKvC,EAAKC,QAGtH,OAEI,yBAAKN,UAAU,OACX,kBAAC,EAAD,MACA,0BAAM6C,SAAUjB,KAAKD,QAAS3B,UAAU,QACpC,2BACIO,KAAK,OACLP,UAAU,SACV8C,IAAK,SAACC,GAAD,OAAW,EAAKb,UAAYa,KACrC,4BAAQ/C,UAAU,UAAlB,WAEH2C,O,GA9ECK,a,MCAlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.978d4e96.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n    return  (\r\n        <header className=\"header\">\r\n        <h1>Todo app</h1>\r\n        <p className=\"header-text\">Add  your  tasks here</p>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;","import React from 'react';\r\n\r\nfunction TodoComp(props) {\r\n    const completedStyle = {\r\n        fontStyle: \"italic\",\r\n        color: \"#cdcdcd\",\r\n        textDecoration: \"line-through\"\r\n    }\r\n    return (\r\n        <form className=\"todo-item\" >\r\n            <input onChange={() => props.handleChange(props.task.id)} type=\"checkbox\" checked={props.task.completed} ></input>\r\n            <label style={props.task.completed ? completedStyle : null}>{props.task.text}</label>\r\n            <button onClick={props.delete} className=\"delete\"><i className=\"fas fa-times\"></i></button>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoComp;","const todosData = [{\r\n    id: 1,\r\n    text: \"Take out the trash\",\r\n    completed: true\r\n},\r\n{\r\n    id: 2,\r\n    text: \"Grocery shopping\",\r\n    completed: false\r\n},\r\n{\r\n    id: 3,\r\n    text: \"Clean gecko tank\",\r\n    completed: false\r\n},\r\n{\r\n    id: 4,\r\n    text: \"Mow lawn\",\r\n    completed: true\r\n}\r\n]\r\n\r\nexport default todosData","import React, { Component } from 'react';\nimport './css/App.css';\nimport Header from './Components/Header.js'\nimport Todo from './Components/todoComp'\nimport data from './data/data'\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            todos: [...data]\n        }\n        this.handleChange = this\n            .handleChange\n            .bind(this);\n        this.addTask = this\n            .addTask\n            .bind(this);\n    }\n    //HANDLE COMPLETED TASK\n    handleChange(id) {\n        this.setState(prevState => {\n            const updateTask = prevState.todos.map(todo => {\n                if (todo.id === id) {\n                    return {\n                        ...todo,\n                        completed: !todo.completed\n                    }\n                }\n                return todo\n            })\n\n            return { todos: updateTask }\n        })\n    }\n    // Add TASK\n    addTask(event) {\n        event.preventDefault();\n        //CHECK IF INPUT IS NULL\n        const todos = [...this.state.todos];\n        if (this.textInput.value === \"\") {\n            alert('Input field is empty')\n        } else {\n            todos.unshift({\n                id: Math.floor(Math.random() * 1000),\n                text: this.textInput.value,\n                completed: false\n            })\n            this.setState({\n                todos: todos\n            })\n            this.textInput.value = \"\";\n        }\n\n    }\n    //DELETE TASK\n    deleteHandler = (index) => {\n        const task = [...this.state.todos];\n        task.splice(index, 1);\n        this.setState({ todos: task })\n    }\n    componentDidMount() {\n        console.log(this.state)\n    }\n    //RENDER  \n    render() {\n        const renderTask = this\n            .state\n            .todos\n            .map((task, index) => {\n                return (<Todo handleChange={this.handleChange} delete={() => this.deleteHandler(index)} task={task} key={task.id} />)\n            })\n\n        return (\n\n            <div className=\"App\">\n                <Header />\n                <form onSubmit={this.addTask} className=\"form\">\n                    <input\n                        type=\"text\"\n                        className=\"addtsk\"\n                        ref={(input) => this.textInput = input} />\n                    <button className=\"submit\">submit</button>\n                </form>\n                {renderTask}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'normalize.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}